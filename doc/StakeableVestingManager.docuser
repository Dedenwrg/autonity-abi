{"kind":"user","methods":{"changeContractBeneficiary(address,uint256,address)":{"notice":"Changes the beneficiary of some contract to the recipient address. The recipient address can release and stake tokens from the contract. Rewards which have been entitled to the beneficiary due to bonding from this contract are not transferred to recipient, but transferred to the old beneficiary."},"getContractAccount(address,uint256)":{"notice":"Returns the smart contract account that holds the corresponding stake-able vesting contract."},"getContractAccount(uint256)":{"notice":"Returns the smart contract account that holds the corresponding stake-able vesting contract."},"getContractAccounts(address)":{"notice":"Returns all the smart contract accounts that holds the corresponding stake-able vesting contract."},"getContracts(address)":{"notice":"Returns all the contracts entitled to `_beneficiary`."},"getUniqueContractID(address,uint256)":{"notice":"Returns a unique id for each contract."},"newContract(address,uint256,uint256,uint256,uint256)":{"notice":"Creates a new stakeable contract. the operation is invalid if the cliff duration is already past."},"totalContracts(address)":{"notice":"Returns the number of contracts entitled to some beneficiary."}},"notice":"It only creates new stakeable vesting contract which deploys new smart contract for each new stakeable vesting contract. It can also manage the beneficiary of an existing stakeable vesting contract.","version":1}
{"kind":"user","methods":{"changeContractBeneficiary(address,uint256,address)":{"notice":"Changes the beneficiary of some contract to the recipient address. The recipient address can release and stake tokens from the contract."},"getExpiredFunds(address,uint256)":{"notice":"Returns the amount of funds that have been expired from the contract due to creation of the contract after the schedule has started. The expired funds belong to autonity treasury account instead."},"getScheduleTracker(uint256)":{"notice":"Returns the schedule tracker for some schedule."},"getUniqueContractID(address,uint256)":{"notice":"Returns a unique id for each contract."},"newContract(address,uint256,uint256,uint256)":{"notice":"Creates a new non-stakeable contract which subscribes to some schedule. If the contract is created before the start timestamp, the beneficiary is entitled to NTN as it unlocks. Otherwise, the contract already has some unlocked NTN which is not entitled to beneficiary. However, NTN that will be unlocked in future will be entitled to beneficiary."},"releaseAllFundsForTreasury(uint256)":{"notice":"Transfers all the unsubscribed funds and the expired funds of the schedule to the treasury account after the schedule total duration has expired."},"releaseAllNTN(uint256)":{"notice":"Used by beneficiary to transfer all unlocked NTN of some contract to his own address."},"releaseExpiredFundsForTreasury(uint256)":{"notice":"Transfers all the expired funds of the schedule to the treasury account."},"releaseNTN(uint256,uint256)":{"notice":"Used by beneficiary to transfer some amount of unlocked NTN of some contract to his own address."},"totalContracts(address)":{"notice":"Returns the number of contracts entitled to some beneficiary."},"vestedFunds(address,uint256)":{"notice":"Returns the amount of funds vested upto the last epoch time."},"withdrawableVestedFunds(address,uint256)":{"notice":"Returns the amount of funds vested and withdrawable upto the last epoch time."}},"notice":"Vesting contracts are created under existing schedules. Schedules are stored in Autonity contract under the address of this smart contract.","version":1}